#!/usr/local/bin/zsh

#
# Exports
#
export PATH="${HOME}/.bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
export KEYTIMEOUT=1
export ZSH_TMUX_FIXTERM=true
export WORKSPACE_DIR=~/workspace

# Homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

# Set up NPM global path
export PATH=/usr/local/share/npm/bin:$PATH

# NVM setup
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# pnpm
export PNPM_HOME=~/Library/pnpm
export PATH="$PNPM_HOME:$PATH"

# Fix GPG https://github.com/keybase/keybase-issues/issues/2798
export GPG_TTY=$(tty)

# Vi mode
bindkey -v

# Theme

eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/catppuccin.omp.json)"
source ~/workspace/catppuccin_mocha-zsh-syntax-highlighting.zsh

#
# Antigen config
#
source ~/.bin/antigen/antigen.zsh

antigen use oh-my-zsh

antigen bundle git
antigen bundle command-not-found
antigen bundle docker
antigen bundle macos
antigen bundle brew
antigen bundle aws
antigen bundle zsh-users/zsh-completions
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-apple-touchbar

antigen apply

# Neofetch

neofetch